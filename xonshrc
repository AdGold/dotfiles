#!/usr/bin/xonsh

# Startx if needed
if not $DISPLAY and $XDG_VTNR == '1':
    startx

# General settings
$VI_MODE = True

# Aliases
source ~/dotfiles/xonshalias.xsh

# Common imports to make command line usage nicer
from math import *
from datetime import datetime
import os
import sys
import time
import string

# Prompt

# Prompt layouts
$PROMPT = '{env_name}{rtn_colour}➜  {BOLD_#00BFFF}{cwd}{branch_color}{curr_branch}{NO_COLOR}{git_indicator} {BOLD_#00BFFF}{prompt_end}{NO_COLOR} '
$RIGHT_PROMPT = '{rtn_value} {BLUE}{curr_time} '
$MULTILINE_PROMPT = '{BOLD_#00BFFF}.{NO_COLOR}'


# Conditional maker helper
def _eval(s):
    return s if isinstance(s, str) else s()
def _cond(cond, t, f='', base='%s'):
    return lambda: base % _eval(t if cond() else f)

# GIT stuff
from xonsh.environ import git_dirty_working_directory, current_branch
_dirty = lambda: git_dirty_working_directory(include_untracked=True)
$FORMATTER_DICT['branch_color'] = _cond(_dirty, '{BOLD_INTENSE_RED}', '{BOLD_INTENSE_GREEN}')
$FORMATTER_DICT['git_indicator'] = _cond(_dirty, '✗')
$FORMATTER_DICT['curr_branch'] = _cond(current_branch, ' (%s)' % current_branch().strip())

# Return value
_rtn_err = lambda: __xonsh_history__.rtns and __xonsh_history__.rtns[-1] != 0
$FORMATTER_DICT['rtn_colour'] = _cond(_rtn_err, '{BOLD_#FF0000}', '{BOLD_#00EE00}')
$FORMATTER_DICT['rtn_value'] = _cond(_rtn_err, lambda: '{BOLD_#FF0000}[%d]' % __xonsh_history__.rtns[-1] )

# Current time
$FORMATTER_DICT['curr_time'] = lambda: datetime.strftime(datetime.now(), '%H:%M')
